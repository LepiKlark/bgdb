// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\Aleksandar\projects\atomicdb\UnitBenchmark\bin\Release\netcoreapp3.1\e8929258-1afb-470f-b4e3-fa901de1e66c
// command took 1.77s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\Aleksandar\projects\atomicdb\UnitBenchmark\bin\Release\netcoreapp3.1\e8929258-1afb-470f-b4e3-fa901de1e66c
// command took 2.85s and exited with 0
// ***** Done, took 00:00:04 (4.76 sec)   *****
// Found 1 benchmarks:
//   MetadataBenchmarks.CreateTable: DefaultJob

// **************************
// Benchmark: MetadataBenchmarks.CreateTable: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e8929258-1afb-470f-b4e3-fa901de1e66c.dll" --benchmarkName "UnitBenchmark.MetadataBenchmarks.CreateTable" --job "Default" --benchmarkId 0 in C:\Users\Aleksandar\projects\atomicdb\UnitBenchmark\bin\Release\netcoreapp3.1\e8929258-1afb-470f-b4e3-fa901de1e66c\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 291200.00 ns, 291.2000 us/op
WorkloadJitting  1: 1 op, 2244451000.00 ns, 2.2445 s/op

WorkloadWarmup   1: 1 op, 2114136000.00 ns, 2.1141 s/op
WorkloadWarmup   2: 1 op, 2112492800.00 ns, 2.1125 s/op
WorkloadWarmup   3: 1 op, 2126709400.00 ns, 2.1267 s/op
WorkloadWarmup   4: 1 op, 2118040200.00 ns, 2.1180 s/op
WorkloadWarmup   5: 1 op, 2115049400.00 ns, 2.1150 s/op
WorkloadWarmup   6: 1 op, 2118236200.00 ns, 2.1182 s/op
WorkloadWarmup   7: 1 op, 2120017400.00 ns, 2.1200 s/op
WorkloadWarmup   8: 1 op, 2108884400.00 ns, 2.1089 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 2136171200.00 ns, 2.1362 s/op
WorkloadActual   2: 1 op, 2124371800.00 ns, 2.1244 s/op
WorkloadActual   3: 1 op, 2109080900.00 ns, 2.1091 s/op
WorkloadActual   4: 1 op, 2122578500.00 ns, 2.1226 s/op
WorkloadActual   5: 1 op, 2118553400.00 ns, 2.1186 s/op
WorkloadActual   6: 1 op, 2125665200.00 ns, 2.1257 s/op
WorkloadActual   7: 1 op, 2132178200.00 ns, 2.1322 s/op
WorkloadActual   8: 1 op, 2134530200.00 ns, 2.1345 s/op
WorkloadActual   9: 1 op, 2151766200.00 ns, 2.1518 s/op
WorkloadActual  10: 1 op, 2112207900.00 ns, 2.1122 s/op
WorkloadActual  11: 1 op, 2110428100.00 ns, 2.1104 s/op
WorkloadActual  12: 1 op, 2136351600.00 ns, 2.1364 s/op
WorkloadActual  13: 1 op, 2177882200.00 ns, 2.1779 s/op
WorkloadActual  14: 1 op, 2115285000.00 ns, 2.1153 s/op
WorkloadActual  15: 1 op, 2122705700.00 ns, 2.1227 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 2136171200.00 ns, 2.1362 s/op
WorkloadResult   2: 1 op, 2124371800.00 ns, 2.1244 s/op
WorkloadResult   3: 1 op, 2109080900.00 ns, 2.1091 s/op
WorkloadResult   4: 1 op, 2122578500.00 ns, 2.1226 s/op
WorkloadResult   5: 1 op, 2118553400.00 ns, 2.1186 s/op
WorkloadResult   6: 1 op, 2125665200.00 ns, 2.1257 s/op
WorkloadResult   7: 1 op, 2132178200.00 ns, 2.1322 s/op
WorkloadResult   8: 1 op, 2134530200.00 ns, 2.1345 s/op
WorkloadResult   9: 1 op, 2151766200.00 ns, 2.1518 s/op
WorkloadResult  10: 1 op, 2112207900.00 ns, 2.1122 s/op
WorkloadResult  11: 1 op, 2110428100.00 ns, 2.1104 s/op
WorkloadResult  12: 1 op, 2136351600.00 ns, 2.1364 s/op
WorkloadResult  13: 1 op, 2115285000.00 ns, 2.1153 s/op
WorkloadResult  14: 1 op, 2122705700.00 ns, 2.1227 s/op
GC:  103 2 1 445601224 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 19684 has exited with code 0

Mean = 2.125 s, StdErr = 0.003 s (0.15%), N = 14, StdDev = 0.012 s
Min = 2.109 s, Q1 = 2.116 s, Median = 2.124 s, Q3 = 2.134 s, Max = 2.152 s
IQR = 0.018 s, LowerFence = 2.089 s, UpperFence = 2.161 s
ConfidenceInterval = [2.112 s; 2.139 s] (CI 99.9%), Margin = 0.014 s (0.64% of Mean)
Skewness = 0.49, Kurtosis = 2.35, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\UnitBenchmark.MetadataBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\UnitBenchmark.MetadataBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\UnitBenchmark.MetadataBenchmarks-report.html

// * Detailed results *
MetadataBenchmarks.CreateTable: DefaultJob
Runtime = .NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT; GC = Concurrent Workstation
Mean = 2.125 s, StdErr = 0.003 s (0.15%), N = 14, StdDev = 0.012 s
Min = 2.109 s, Q1 = 2.116 s, Median = 2.124 s, Q3 = 2.134 s, Max = 2.152 s
IQR = 0.018 s, LowerFence = 2.089 s, UpperFence = 2.161 s
ConfidenceInterval = [2.112 s; 2.139 s] (CI 99.9%), Margin = 0.014 s (0.64% of Mean)
Skewness = 0.49, Kurtosis = 2.35, MValue = 2
-------------------- Histogram --------------------
[2.103 s ; 2.158 s) | @@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.18363.778 (1909/November2018Update/19H2)
AMD Ryzen 5 1600X, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=3.1.201
  [Host]     : .NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT
  DefaultJob : .NET Core 3.1.3 (CoreCLR 4.700.20.11803, CoreFX 4.700.20.12001), X64 RyuJIT


|      Method |    Mean |    Error |   StdDev | Ratio |       Gen 0 |     Gen 1 |     Gen 2 | Allocated |
|------------ |--------:|---------:|---------:|------:|------------:|----------:|----------:|----------:|
| CreateTable | 2.125 s | 0.0136 s | 0.0121 s |  1.00 | 103000.0000 | 2000.0000 | 1000.0000 | 424.96 MB |

// * Hints *
Outliers
  MetadataBenchmarks.CreateTable: Default -> 1 outlier  was  removed (2.18 s)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Ratio     : Mean of the ratio distribution ([Current]/[Baseline])
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 s       : 1 Second (1 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:53 (53.92 sec), executed benchmarks: 1

Global total time: 00:00:58 (58.69 sec), executed benchmarks: 1
// * Artifacts cleanup *
